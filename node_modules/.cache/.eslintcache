[{"C:\\Users\\solda\\Desktop\\nwitter\\src\\index.js":"1","C:\\Users\\solda\\Desktop\\nwitter\\src\\components\\App.js":"2","C:\\Users\\solda\\Desktop\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\solda\\Desktop\\nwitter\\src\\routes\\Home.js":"4","C:\\Users\\solda\\Desktop\\nwitter\\src\\routes\\Auth.js":"5","C:\\Users\\solda\\Desktop\\nwitter\\src\\FB.js":"6","C:\\Users\\solda\\Desktop\\nwitter\\src\\components\\Navigation.js":"7","C:\\Users\\solda\\Desktop\\nwitter\\src\\routes\\Profile.js":"8"},{"size":216,"mtime":1618472974268,"results":"9","hashOfConfig":"10"},{"size":813,"mtime":1618481638077,"results":"11","hashOfConfig":"10"},{"size":1161,"mtime":1618485036910,"results":"12","hashOfConfig":"10"},{"size":134,"mtime":1618461189208,"results":"13","hashOfConfig":"10"},{"size":3014,"mtime":1618483272925,"results":"14","hashOfConfig":"10"},{"size":610,"mtime":1618482341811,"results":"15","hashOfConfig":"10"},{"size":388,"mtime":1618484054805,"results":"16","hashOfConfig":"10"},{"size":386,"mtime":1618485018156,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17hl9f6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\solda\\Desktop\\nwitter\\src\\index.js",[],["36","37"],"C:\\Users\\solda\\Desktop\\nwitter\\src\\components\\App.js",[],"C:\\Users\\solda\\Desktop\\nwitter\\src\\components\\Router.js",["38"],"C:\\Users\\solda\\Desktop\\nwitter\\src\\routes\\Home.js",[],"C:\\Users\\solda\\Desktop\\nwitter\\src\\routes\\Auth.js",["39"],"import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"FB\";\r\n\r\n// export default () => <span>Auth</span>\r\n\r\n// import\r\nconst Auth = () => {\r\n    // hook\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        // input이 변경되는 이벤트 발생\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault(); // 이벤트 발생 시 새로고침 방지\r\n\r\n        try {\r\n            let data;\r\n\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n\r\n        let provider;\r\n        if (name === \"gg\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"gh\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        const data = await authService.signInWithPopup(provider);\r\n        //console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"E-mail\"\r\n                    required\r\n                    value={email} // 키보드로 입력 받음\r\n                    onChange={onChange} // 키를 누를 때마다(값이 바뀔 때마다) 호출하여 입력값을 저장\r\n                />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign in\"} />\r\n                <p>{error}</p>\r\n            </form>\r\n            <button onClick={toggleAccount}>{newAccount ? \"Sign in.\" : \"Create Account.\"}</button>\r\n            <div>\r\n                <p>\r\n                    <button onClick={onSocialClick} name=\"gg\">\r\n                        &nbsp;Continue with Google\r\n                    </button>\r\n                    <button onClick={onSocialClick} name=\"gh\">\r\n                        &nbsp;Continue with Github\r\n                    </button>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;\r\n","C:\\Users\\solda\\Desktop\\nwitter\\src\\FB.js",[],"C:\\Users\\solda\\Desktop\\nwitter\\src\\components\\Navigation.js",[],"C:\\Users\\solda\\Desktop\\nwitter\\src\\routes\\Profile.js",["40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":58,"column":15,"nodeType":"47","messageId":"48","endLine":58,"endColumn":19},{"ruleId":"50","severity":1,"message":"51","line":5,"column":1,"nodeType":"52","endLine":17,"endColumn":3},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]