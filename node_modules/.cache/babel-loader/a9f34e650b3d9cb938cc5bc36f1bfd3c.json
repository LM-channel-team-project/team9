{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\solda\\\\Desktop\\\\nwitter\\\\src\\\\routes\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"FB\"; // export default () => <span>Auth</span>\n// import\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  // hook\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    // input이 변경되는 이벤트 발생\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault(); // 이벤트 발생 시 새로고침 방지\n\n    try {\n      let data;\n\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  const onSocialClick = async event => {\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === \"gg\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"gh\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"E-mail\",\n        required: true,\n        value: email // 키보드로 입력 받음\n        ,\n        onChange: onChange // 키를 누를 때마다(값이 바뀔 때마다) 호출하여 입력값을 저장\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleAccount,\n      children: newAccount ? \"Sign in.\" : \"Create Account.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSocialClick,\n          name: \"gg\",\n          children: \"\\xA0Continue with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSocialClick,\n          name: \"gh\",\n          children: \"\\xA0Continue with Github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"PzQQNDqROVuSUwGcld31eLJW8SE=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/solda/Desktop/nwitter/src/routes/Auth.js"],"names":["React","useState","authService","firebaseInstance","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","toggleAccount","prev","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"FB\";\r\n\r\n// export default () => <span>Auth</span>\r\n\r\n// import\r\nconst Auth = () => {\r\n    // hook\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        // input이 변경되는 이벤트 발생\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault(); // 이벤트 발생 시 새로고침 방지\r\n\r\n        try {\r\n            let data;\r\n\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n\r\n        let provider;\r\n        if (name === \"gg\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"gh\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"E-mail\"\r\n                    required\r\n                    value={email} // 키보드로 입력 받음\r\n                    onChange={onChange} // 키를 누를 때마다(값이 바뀔 때마다) 호출하여 입력값을 저장\r\n                />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign in\"} />\r\n                <p>{error}</p>\r\n            </form>\r\n            <button onClick={toggleAccount}>{newAccount ? \"Sign in.\" : \"Create Account.\"}</button>\r\n            <div>\r\n                <p>\r\n                    <button onClick={onSocialClick} name=\"gg\">\r\n                        &nbsp;Continue with Google\r\n                    </button>\r\n                    <button onClick={onSocialClick} name=\"gh\">\r\n                        &nbsp;Continue with Github\r\n                    </button>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}