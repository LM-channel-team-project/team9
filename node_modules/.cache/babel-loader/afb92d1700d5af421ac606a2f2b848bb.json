{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\solda\\\\Desktop\\\\nwitter\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SolRouter from \"components/Router\";\nimport { authService } from \"FB\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // authService.currentUser); // 로그인 여부 확인 불가\n\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setInit(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [init ? /*#__PURE__*/_jsxDEV(SolRouter, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this) : \"Initializing‥\", /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"\\xA9 \", new Date().getFullYear(), \" 9\\uC6D0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ptuVdtUS6m3ICSoMd6VgFQrjPsU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/solda/Desktop/nwitter/src/components/App.js"],"names":["React","useState","SolRouter","authService","App","init","setInit","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","user","Date","getFullYear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,IAA5B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C,CAFW,CAE0C;;AAErDQ,EAAAA,SAAS,CAAC,MAAM;AACZN,IAAAA,WAAW,CAACO,kBAAZ,CAAgCC,IAAD,IAAU;AACrC,UAAIA,IAAJ,EAAU;AACNH,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH,OAFD,MAEO;AACHA,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH;;AACDF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;AAWA,sBACI;AAAA,eACKD,IAAI,gBAAG,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAH,GAA2C,eADpD,eAEI;AAAA,0BAAgB,IAAIK,IAAJ,GAAWC,WAAX,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH;;GArBQT,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport SolRouter from \"components/Router\";\r\nimport { authService } from \"FB\";\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // authService.currentUser); // 로그인 여부 확인 불가\r\n\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setIsLoggedIn(true);\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {init ? <SolRouter isLoggedIn={isLoggedIn} /> : \"Initializing‥\"}\r\n            <footer>&copy; {new Date().getFullYear()} 9원</footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}